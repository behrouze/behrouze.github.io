{"componentChunkName":"component---src-templates-wp-post-tsx","path":"/veille-techno-2018-s1","result":{"pageContext":{"id":"3447e35f-6f41-55f1-b1b8-330b0cf34699","fileAbsolutePath":"/Users/behrouze/Sources/gatsby-blog/obsidian/Blog/veille-techno-2018-s1.md","frontmatter":{"categories":["web"],"date":"2018-05-20","lastUpdate":null,"tags":["tutoriel"],"title":"Veille Techno 2018 S1"},"html":"<h2>Webpack 4</h2>\n<p><a href=\"https://auth0.com/blog/webpack-4-release-what-is-new/\">Webpack 4</a> (<a href=\"https://medium.com/webpack/webpack-4-released-today-6cdb994702d4\">release announcement</a>) &#x26; <a href=\"https://medium.com/webpack/the-new-plugin-system-week-22-23-c24e3b22e95\">new Plugin system</a> (<a href=\"https://www.valentinog.com/blog/webpack-4-tutorial/\">tuto complet</a>)</p>\n<ul>\n<li><a href=\"https://webpack.js.org/plugins/commons-chunk-plugin/\">CommonsChunkPlugin</a> (<a href=\"https://medium.com/webpack/webpack-bits-getting-the-most-out-of-the-commonschunkplugin-ab389e5f318\">blog</a>) a <a href=\"https://webpack.js.org/plugins/split-chunks-plugin/\">Ã©tÃ© remplacÃ©</a> par <code class=\"language-text\">optimization.splitChunks</code></li>\n<li>une propriÃ©tÃ© <a href=\"https://webpack.js.org/concepts/#mode\">mode</a> (dÃ©faut production) permet de setter lâ€™environnement dans le <code class=\"language-text\">webpack.config.js</code> et webpack peut etre lancÃ© avec les flags -dÂ  et -p</li>\n<li>0CJS : aucune configuration n'est nÃ©cessaire pour un dÃ©marrage rapide (sans entry et output)</li>\n</ul>\n<h2>Webpack et Visual Studio 2017</h2>\n<p>VS dispose d'une extension <a href=\"https://marketplace.visualstudio.com/items?itemName=MadsKristensen.WebPackTaskRunner\">WebPack Task Runner</a>, qui permet d'avoir la config de Webpack accessible depuis le Task Runner de Visual Studio et de pouvoir lancer les diffÃ©rentes taches Ã  travers une GUI. Voici une <a href=\"https://sochix.ru/how-to-integrate-webpack-into-visual-studio-2015/\">step by step</a> pour gÃ©rer Webpack depuis Visual Studio 2015 mais en rÃ©sumÃ©:</p>\n<ul>\n<li>installer l'<a href=\"https://marketplace.visualstudio.com/items?itemName=MadsKristensen.WebPackTaskRunner\">extension de Mads Kristensen</a> dans Visual Studio (fonctionne dans VS2015 et VS2017)</li>\n<li><strong>Webpack doit Ãªtre installÃ© globalement</strong></li>\n<li>le fichier de conf <strong>webpack.config.js doit etre Ã  la racine du projet</strong> pour Ãªtre visible de l'extension VS</li>\n</ul>\n<h2>NPM et Proxy des requetes Ajax</h2>\n<p>Lorsqu'on dÃ©v un projet disposant d'une Webapi qui tourne sur un backend (ci-dessous la config d'un projet <a href=\"https://reactjs.org/docs/add-react-to-a-new-app.html#create-react-app\">create-react-app</a>), il faut spÃ©cifier les ports utilisÃ©s Ã  NPM dans le <strong>package.json</strong> via un <strong>objet \"proxy\"</strong> pour que les appels Ajax de l'application soient redirigÃ©s vers le serveur API:</p>\n<p>\"scripts\":Â {\nÂ Â Â Â \"start\":Â \"PORT=3001Â react-scriptsÂ start\",\nÂ Â Â Â \"build\":Â \"react-scriptsÂ build\",\nÂ Â Â Â \"test\":Â \"react-scriptsÂ testÂ --env=jsdom\",\nÂ Â Â Â \"eject\":Â \"react-scriptsÂ eject\"\nÂ Â },\nÂ Â \"proxy\":Â {\nÂ Â Â Â \"/api\":Â {\nÂ Â Â Â Â Â \"target\":Â \"<a href=\"http://127.0.0.1:3000\">http://127.0.0.1:3000</a>\",\nÂ Â Â Â Â Â \"changeOrigin\":Â true\nÂ Â Â Â }\nÂ Â }</p>\n<h2>NPM Misc</h2>\n<ul>\n<li><code class=\"language-text\">npm install --only=prod[uction]</code> installs only <code class=\"language-text\">dependencies</code></li>\n<li><code class=\"language-text\">npm install --only=dev[elopment]</code> installs only <code class=\"language-text\">devDependencies</code></li>\n<li><a href=\"https://www.npmjs.com/package/npx\">npx</a> permet dâ€™exÃ©cuter un package npm binaires (livrÃ© avec <a href=\"https://github.com/npm/npm/releases/tag/v5.2.0\">npm > 5.2</a>) et voici un <a href=\"https://github.com/suarasaur/awesome-npx/blob/master/README.md\">repo</a> avec des ressources \"compatibles\" npx (ex: utiliser avec PM2 installÃ© en Webpack dependencies) NPX nous donne une raison de plus pour <strong>Ã©viter le</strong> npm -gÂ  !</li>\n<li>npm <a href=\"https://docs.npmjs.com/files/package.json#dependencies\">versionning</a></li>\n</ul>\n<p>Article sur <a href=\"https://medium.com/@stalonadsl948/dependencies-vs-devdependencies-926e096a3dee\">dependencies vs devDependencies sur Medium</a></p>\n<p><a href=\"https://www.telerik.com/blogs/start-off-the-year-with-a-bang-kendo-ui-r1-2018-release#kendo-ui-react\">MAJ Kendo UI R1 2018</a> avec la nouvelle <a href=\"https://www.telerik.com/kendo-react-ui/components/grid/\">kendo-react-grid</a> rÃ©Ã©crite en React (fini le wrapper jQuery ğŸ¤®)</p>\n<p><a href=\"https://github.com/vuejs/awesome-vue\">VueJs resources</a></p>\n<h2>SSR avec Reactjs</h2>\n<p>4 articles intÃ©ressants:</p>\n<ul>\n<li><a href=\"https://marmelab.com/blog/2017/10/17/code-splitting.html\">Running React Router v4, Redux Saga, SSR and Code Splitting together</a></li>\n<li><a href=\"https://medium.com/bucharestjs/adding-state-management-with-redux-in-a-cra-srr-project-9798d74dbb3b\">Adding state management with Redux in a CRA + SSR project</a></li>\n<li><a href=\"https://tylermcginnis.com/react-router-server-rendering/\">Server Rendering with React and React Router</a></li>\n<li><a href=\"https://crypt.codemancers.com/posts/2017-06-03-reactjs-server-side-rendering-with-router-v4-and-redux/\">ReactJS : Server side rendering with router v4 &#x26; redux</a></li>\n</ul>"}},"staticQueryHashes":["1026020893","28434099","3153813225"]}