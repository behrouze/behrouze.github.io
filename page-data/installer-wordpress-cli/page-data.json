{
    "componentChunkName": "component---src-templates-wp-post-tsx",
    "path": "/installer-wordpress-cli",
    "result": {"pageContext":{"id":"8b24b53d-0a1e-53fc-80c3-18e6cd1f93fc","fileAbsolutePath":"/Users/behrouze/Sources/gatsby-blog/obsidian/Blog/installer-wordpress-cli.md","frontmatter":{"categories":["cms"],"date":"2018-09-11","lastUpdate":null,"tags":["admin-linux","wordpress","CLI"],"title":"Installation automatisée de Wordpress en ligne de commande"},"html":"<h2>Pré-requis</h2>\n<p>Pour installer Wordpress rapidement sur un serveur Linux en ligne de commandes, il va nous falloir ces 3 éléments avant de commencer :</p>\n<ol>\n<li>avoir un <strong>serveur web Nginx</strong> par exemple, qui est léger rapide et relativement simple a <a href=\"https://www.digitalocean.com/community/tools/nginx?global.app.lang=fr\">configurer</a></li>\n<li><strong>PHP</strong> avec <a href=\"https://www.php.net/manual/fr/install.fpm.php\">PHP-FPM</a> qui est un interpréteur PHP Fast Process Manager qui tourne sous forme de daemon (vérifier s'il tourne avec <code class=\"language-text\">sudo systemctl status php7.0-fpm</code>). C'est le process qui reçoit et traite les requêtes Fast/CGI du serveur Nginx en faisant la passerelle avec le code PHP</li>\n<li>disposer d'un SGBD (moteur de base de données) <strong>MariaDB</strong> en local ou en réseau</li>\n</ol>\n<h3>Installation des pré-requis sous debian</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> -y nginx php php-fpm mysql-server php-mysql</code></pre></div>\n<h2>Créer la base de données</h2>\n<p>Il faut ensuite créer la base de données</p>\n<p>Se connecter au SGBD MariaDB</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> mysql -u root\n<span class=\"token function\">sudo</span> mysql -u root -ppassword <span class=\"token comment\"># si on avait déja setté le password root</span></code></pre></div>\n<p>puis exécuter les commandes suivantes pour donner les autorisations sur les tables Wordpress :</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">show</span> <span class=\"token keyword\">databases</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">-- lister les base déjà présente</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">database</span> wordpress_test<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">PRIVILEGES</span> <span class=\"token keyword\">ON</span> wordpress_test<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">TO</span> <span class=\"token string\">\"login_utilisateur_de_test\"</span><span class=\"token variable\">@\"localhost\"</span> IDENTIFIED <span class=\"token keyword\">BY</span> <span class=\"token string\">'mot_de_passe'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">--création du login/passsword pour notre nouvelle BDD</span></code></pre></div>\n<h2>Installation de Wordpress avec wp-cli</h2>\n<p>Pour effectuer une installation en ligne de commande nous allons utiliser l'outil officiel <code class=\"language-text\">wp-cli</code> [[wordpress-wp-cli|(voir ici comment l'installer)]]</p>\n<h3>Installer Wordpress sur le serveur Nginx</h3>\n<p>Une fois <code class=\"language-text\">wp-cli</code> disponible sur votre système, il suffit de choisir une version de Wordpress à installer (dernière version stable si non spécifiée):</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">cd</span> /var/www/dossier_d_installation_de_wordpress <span class=\"token comment\"># ou ailleurs ;)</span>\nwp core download\nwp core download --version<span class=\"token operator\">=</span><span class=\"token number\">5.8</span>.3  <span class=\"token comment\"># si on souhaite une version spécifique</span></code></pre></div>\n<h3>Sécuriser l'installation de Wordpress</h3>\n<p>Modifier les permissions pour l'utilisateur <code class=\"language-text\">www-data</code> (qui est le user par défaut pour le process <code class=\"language-text\">nginx</code>) pour <a href=\"https://wordpress.org/support/article/hardening-wordpress/\">renforcer</a> la sécurité des <a href=\"https://wordpress.org/support/article/hardening-wordpress/#changing-file-permissions\">fichiers</a> :</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> -R www-data:www-data /var/www/wp-hosting/test\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type d -exec <span class=\"token function\">chmod</span> <span class=\"token number\">755</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># Change directory permissions rwxr-xr-x</span>\n<span class=\"token function\">find</span> <span class=\"token builtin class-name\">.</span> -type f -exec <span class=\"token function\">chmod</span> <span class=\"token number\">644</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># Change file permissions rw-r--r--</span></code></pre></div>\n<h3>Configuration initiale</h3>\n<p>On poursuit en créant automatiquement le fichier <code class=\"language-text\">wp-config.php</code> :</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">wp core config --dbname<span class=\"token operator\">=</span>wordpress --dbuser<span class=\"token operator\">=</span>root --dbpass<span class=\"token operator\">=</span>root</code></pre></div>\n<h3>Tables de la base de données</h3>\n<p>Puis on termine l'installation par l'étape de <strong>création des tables de la BDD</strong> (attention à la sécurité avec le log du password dans l'historique du shell) :</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">wp core <span class=\"token function\">install</span> --url<span class=\"token operator\">=</span>http://localhost:8888/dev/wordpress/ --title<span class=\"token operator\">=</span>WordPress --admin_user<span class=\"token operator\">=</span>myusername --admin_password<span class=\"token operator\">=</span>mypassword --admin_email<span class=\"token operator\">=</span>email@deladmin.com</code></pre></div>\n<h2>Nginx</h2>\nEnfin pour pouvoir servir les pages web, il faut configurer le serveur web, c'est ici que va intervenir php-fpm installé au <a href=\"/#pre-requis\" title=\"début de l'article\">début de l'article</a> :\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">listen</span> <span class=\"token number\">8000</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">root</span> /var/www/wp-hosting/test</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">index</span> index.php</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">server_name</span> test.mondomaine.com</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">access_log</span> /var/log/nginx/wp-test.access_log</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">error_log</span> /var/log/nginx/wp-test.error_log notice</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token directive\"><span class=\"token keyword\">try_files</span> <span class=\"token variable\">$uri</span> <span class=\"token variable\">$uri</span>/ /index.php?<span class=\"token variable\">$args</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token directive\"><span class=\"token keyword\">location</span> ~ \\.php$</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token directive\"><span class=\"token keyword\">include</span> snippets/fastcgi-php.conf</span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">fastcgi_pass</span> unix:/var/run/php/php7.0-fpm.sock</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},
    "staticQueryHashes": ["1026020893","1333896537","28434099"]}