{
    "componentChunkName": "component---src-templates-wp-post-tsx",
    "path": "/jquery-tutoriel-evenements",
    "result": {"pageContext":{"id":"40e5aad2-3aa7-588d-9f0e-55d72f2176ca","fileAbsolutePath":"/home/behrouze/Sources/blog/obsidian/Blog/jquery-tutoriel-evenements.md","frontmatter":{"categories":["javascript"],"date":"2013-08-05","lastUpdate":null,"tags":["debutant","javascript","jquery","tutoriel"],"title":"jQuery tutoriel 4 – les événements (jQuery events)"},"html":"<p>Si nous sommes attirés et utilisons <strong>jQuery</strong>, c'est essentiellement pour ajouter un \"comportement\" à nos pages web, c'est à dire que nous souhaitons que des événements (click de souris, frappe de touche de clavier,etc.) sur des éléments de notre page, puissent engendrer des actions (apparition d'un <div>, ajout d'une class CSS, animation d'un élément etc.) sur cette même page, et ainsi rendre la navigation plus interactive (web 2.0). Il est donc essentiel de comprendre comment fonctionnent les événements en Jquery.</p>\n<h2>Comment ça fonctionne ?</h2>\n<h3>Il faut d'abord comprendre les éléments qui interviennent dans ce scénario</h3>\n<p>Votre code jQuery doit dire au navigateur (en fait à l'interpréteur Javascript inclus dans le navigateur) :</p>\n<ol>\n<li><strong>QUI</strong> il doit surveiller: l'élément de votre page HTML qui recevra un événement (sélectionné via le jQuery selector)</li>\n<li><strong>QUEL</strong> <strong>ÉVÉNEMENT</strong> écouter sur cet élément: le type d’événement  peut être un comportement humain (click de souris, survol du curseur, POST d'une form etc.) ou programmé (une modification de DOM par ex). Voir la <a href=\"http://api.jquery.com/category/events/\" title=\"liste des événement jQuery\">liste des événements jQuery</a></li>\n<li><strong>QUOI FAIRE</strong>: déclencher une action quelconque en exécutant une fonction définie</li>\n</ol>\n<h3>Comment mettre en place les interactions entre ces différents éléments en jQuery</h3>\n<ol>\n<li><a href=\"http://www.brooz.fr/2012/05/12/jquery-tutoriel-etape-2-les-selecteurs/\" title=\"jQuery tutoriel 2 – les sélecteurs\">sélection de l'élément</a> à qui on veut \"attacher\" (<em>bind</em> en anglais) un événement: <strong>$(\"#divClickable\")</strong></li>\n<li>spécifier l’événement écouté lorsqu'il intervient sur l'élément sélectionné: $(\"#divClickable\")<strong>.dblclick()</strong></li>\n<li>ajout de la fonction déclenchée lorsque cet événement intervient (ici un double click sur notre DIV ayant l'ID divClickable): $(\"#divClickable\")<strong>.<strong>dblclick(<strong>function(){ alert ('vous avez effectué un bouble click'); }</strong>)</strong>;</strong></li>\n</ol>\n<h3>Raccourci</h3>\n<p>En fait le code que nous venons d'écrire est un raccourci équivalent à : <code class=\"language-text\">$(\"#divClickable\").on(\"dblclick\",function(){ alert ('vous avez effectué un bouble click');});</code></p>\n<p>La méthode <a href=\"http://api.jquery.com/on/\"><strong>on( )</strong></a> remplace <a href=\"http://api.jquery.com/bind/\" title=\"ancienne méthode jQuery bind() (avant 1.7)\"><strong>bind( )</strong></a> et <a href=\"http://api.jquery.com/live/\" title=\"ancienne méthode jQuery live() (avant 1.7)\"><strong>live()</strong></a> (depuis jQuery 1.7) et prend en arguments:</p>\n<ol>\n<li>le nom de l'événement, ici le \"<a href=\"http://api.jquery.com/dblclick/\" title=\"évenement double click\">dblclick</a>\"</li>\n<li>la fonction a exécuter lorsque l'événement est déclenché \"function(){alert etc.}\"</li>\n</ol>\n<p>Cette méthode on( ) permet d'attacher un <a href=\"http://api.jquery.com/category/events/\">événement</a> à un élément (ici notre divclickable).</p>\n<p><em>Pourquoi je vous explique tout cela ?</em> Ce n'est pas pour le plaisir de mettre un max de contenu dans mon blog ;) mais parce qu'il est possible de détacher ces événements !</p>\n<h3>Détacher un événement</h3>\n<p>Pourquoi faire ? Tout simplement parce qu'il peut arriver que vous souhaitiez \"désactiver\" la prise en charge d'un événement au cours de la navigation dans votre page. <em>Par exemple, si vous souhaitez désactiver un bouton de soumission de formulaire suite au 1er click (pour que les utilisateurs impatients ne puissent pas clicker 10 fois de suite dessus et déclencher autant d'appels à votre serveur).</em></p>\n<p>Il suffit de faire appel à la méthode <strong><a href=\"http://api.jquery.com/off/\">off( )</a></strong> (depuis jQuery 1.7, anciennement <strong>unbind( )</strong> ):</p>\n<p>$(\"#divClickable\")<strong>.off(\"dblclick\");</strong></p>\n<p>Cette fonction, <strong>désactive</strong> la prise en charge du double click sur notre div.</p>\n<h3>Subtilités</h3>\n<p>Il est possible de cibler très finement le champ d'application de ces événement, je vous invite pour cela à visiter la doc officielle.</p>"}},
    "staticQueryHashes": ["1026020893","28434099","3153813225"]}