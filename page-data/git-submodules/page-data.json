{
    "componentChunkName": "component---src-templates-wp-post-tsx",
    "path": "/git-submodules",
    "result": {"pageContext":{"id":"717e6117-b5a5-52ee-866b-8e4b64bc5198","fileAbsolutePath":"/home/behrouze/Sources/gatsby-blog/obsidian/Blog/git-submodules.md","frontmatter":{"categories":["devops"],"date":"2022-01-27","lastUpdate":"2022-01-27","tags":["git","linux","admin"],"title":"Git submodules"},"html":"<p>Les <a href=\"https://git-scm.com/book/en/v2/Git-Tools-Submodules\">submodules</a> git (ou <a href=\"https://git-scm.com/book/fr/v2/Utilitaires-Git-Sous-modules\">sous-modules git</a>) permettent d'inclure un repo dans un repo ü§î</p>\n<h2>Workflow</h2>\n<h3>Ajouter un submodule</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> submodule <span class=\"token function\">add</span> https://github.com/behrouze/mon-projet-de-sous-module.git</code></pre></div>\n<h3>Clone d'un projet contenant un sous-module</h3>\n<p>Pour travailler avec les submodules, il faut cloner le r√©po parent avec l'option <code class=\"language-text\">--recurse-submodules</code>, dans l'exemple suivant</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> clone --recurse-submodules https://github.com/behrouze/projet.git</code></pre></div>\n<p>Si on oublie l'option <code class=\"language-text\">--recurse-submodules</code> lors du <code class=\"language-text\">git clone</code> il est toujours possible de rattraper le coup avec :</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">cd</span> dossier-du-sous-module\n<span class=\"token function\">git</span> submodule init\n<span class=\"token function\">git</span> submodule update</code></pre></div>\n<h3>Mise √† jour du submodule</h3>\n<p>Le concepte a retenir, c'est que lorsqu'on initialise un submodule, on cr√©e une sorte de pointeur vers un commit donn√© du submodule. Cela veut dire qu'un simple git pull ne mettra pas a jour le submodule ü•∫</p>\n<p>Si le repo du sous-module a √©t√© mis a jour et les commit push√©s, il faut alors mettre √† jour le submodule dans le projet qui l'embarque, et alors utiliser <code class=\"language-text\">git submodule update</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> submodule update --remote\n<span class=\"token function\">git</span> commit -am <span class=\"token string\">\"mise a jour du submodule\"</span>\n<span class=\"token function\">git</span> push</code></pre></div>\nVoir aussi <a href=\"/git\" title=\"git\">git</a>"}},
    "staticQueryHashes": ["1026020893","1333896537","28434099"]}