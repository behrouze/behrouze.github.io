{"componentChunkName":"component---src-templates-wp-post-tsx","path":"/basic-auth","result":{"pageContext":{"id":"b1f1b646-8788-54cd-819b-fba9c9ca4c10","fileAbsolutePath":"/Users/behrouze/Sources/gatsby-blog/obsidian/Blog/basic-auth.md","frontmatter":{"categories":["securite"],"date":"2019-08-11","lastUpdate":null,"tags":["net","http","reseau","securite","base64","basicauth"],"title":"Basic Auth"},"html":"<p>La <strong>Basic Auth</strong> (Basic Authentication en 🇬🇧) ou <a href=\"https://developer.mozilla.org/fr/docs/Web/HTTP/Authentication#sch%C3%A9ma_dauthentification_basique\">Schéma d'Authentification Basique</a> en 🇫🇷 <a href=\"https://tools.ietf.org/html/rfc7617#section-2\">RFC7617</a> est l'un des <a href=\"https://developer.mozilla.org/fr/docs/Web/HTTP/Authentication#sch%C3%A9ma_dauthentification\">schéma</a> d'<a href=\"https://developer.mozilla.org/fr/docs/Web/HTTP/Authentication\">authentification HTTP</a> de la \"structure d’<a href=\"https://fr.wikipedia.org/wiki/Authentification_HTTP\">authentification HTTP</a>\"\nElle permet de protéger une URL par un simple couple <strong>login/mot de passe</strong>.\nLors de l'accès à une <em>URL protégée par une Basic Auth</em>, le navigateur fait apparaître une <strong>pop-up</strong> demandant les credentials (login/pass).</p>\n<h1>L’utiliser ou pas ?</h1>\n<p>Ce mécanisme permet de mettre en place un <strong>blocage simple</strong>, mais elle est si basique qu’elle peut être sniffée si certaines requêtes ne passent en https car les <em>login</em> et <em>password</em> sont juste <strong>encodés en base64</strong> ou simplement brute forcée (si d’autres mécanismes de limitations ne sont pas en place).</p>\n<ul>\n<li>la basic auth est donc <strong>déconseillée</strong> 👎 pour sécuriser l’accès à une application web</li>\n<li>en revanche elle est <strong>adaptée</strong> 👍 dans le cas où on souhaite simplement cacher une URL des <a href=\"https://deviceatlas.com/blog/most-active-bots-and-crawlers-web\">crawlers</a> (Googlebot etc) pour par exemple éviter l’indexation des sites (environemens de recette, pré-prod etc)</li>\n</ul>\n<h1>Protocole et en-têtes HTTP</h1>\n<p>La sécurisation par l’authentification basique <strong>peut se faire à différents niveaux</strong> de l’infrastructure, soit au niveau des :</p>\n<ul>\n<li><strong>Reverse Proxy</strong> (Nginx, Apache) et même certains CDN qui proposent des fonctionnalités de Proxy comme <a href=\"https://community.akamai.com/customers/s/article/How-To-Setup-HTTP-Basic-Authentication-on-Akamai\">Akamai</a></li>\n<li><strong>serveur web</strong> <a href=\"https://docs.nginx.com/nginx/admin-guide/security-controls/configuring-http-basic-authentication/\">Nginx</a>, Apache, IIS</li>\n<li><strong>application web</strong> via des framework comme <a href=\"https://github.com/jshttp/basic-auth/blob/master/README.md\">Express</a>, <a href=\"https://docs.microsoft.com/fr-fr/aspnet/web-api/overview/security/basic-authentication\">.Net</a></li>\n</ul>\n<h2>Séquencement</h2>\n<ol>\n<li>le navigateur commence par effectuer un <code class=\"language-text\">http GET</code> l’URL protégée par une Basic Auth</li>\n<li>en fonction de l’infra qui authentifie (reverse proxy ou serveur web), on reçoit coté client un couple <em>en-tête HTTP</em> / <a href=\"https://developer.mozilla.org/fr/docs/Web/HTTP/Status#R%C3%A9ponses_d&#x27;erreur_c%C3%B4t%C3%A9_client\">code HTTP</a> différent, mais le schéma d’authentification est défini au niveau de ces en-têtes (ici <code class=\"language-text\">Basic</code>):\n<ul>\n<li>du <strong>Proxy</strong> qui répond avec :\n<ol>\n<li>code HTTP <strong><code class=\"language-text\">407</code></strong> (Proxy Authentication Required)</li>\n<li>en-tête HTTP : <code class=\"language-text\">Proxy-Authenticate: Basic realm=\"Acces restreint\"</code></li>\n</ol>\n</li>\n<li>ou du <strong>serveur Web</strong> qui répond avec :\n<ol>\n<li>code HTTP <strong><code class=\"language-text\">401</code></strong> (Unauthorized)</li>\n<li>en-tête HTTP : <code class=\"language-text\">WWW-Authenticate: Basic realm=\"Acces restreint\"</code></li>\n</ol>\n</li>\n</ul>\n</li>\n<li>la <strong>pop-up</strong> d’authentification s’affiche alors dans le Navigateur<br>\n(l’authentification à travers l’URL <a href=\"http://login:pass@exemple.com\">http://login:pass@exemple.com</a> est <a href=\"https://developer.mozilla.org/fr/docs/Web/HTTP/Status#R%C3%A9ponses_d&#x27;erreur_c%C3%B4t%C3%A9_client\">dépréciée</a>)</li>\n<li>le navigateur <strong>encode en base64</strong> la chaîne: « <code class=\"language-text\">login:pass</code> » et la transmet via un GET (de la même ressource) avec l’en-tête HTTP <code class=\"language-text\">Authorization</code><br>\nex: <code class=\"language-text\">Authorization: Basic bG9naW46cGFzcw==</code></li>\n<li>le Proxy ou Serveur Web qui gère l’authentification réponds après vérification, soit par une <strong><code class=\"language-text\">200</code></strong> (et tout roule), soit par une <code class=\"language-text\">**403**</code> (Forbidden)…</li>\n<li>le <strong>navigateur garde en cache</strong> ces credentials et <strong>les envois lors de toutes les requêtes</strong> HTTP vers ce <code class=\"language-text\">realm</code> (ici la chaine <em>Acces restreint</em>)</li>\n<li>lorsque l’<strong>onglet est fermé</strong>, le navigateur <strong>supprime</strong> ces credentials de son <strong>cache</strong></li>\n</ol>\n<h1>Encodage et décodage</h1>\n<p>L'encodage</p>\n<h2>Nodejs:</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>b64<span class=\"token punctuation\">,</span> ‘base64’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"https://nodejs.org/api/buffer.html#buffer_buffer\">https://nodejs.org/api/buffer.html#buffer_buffer</a></p>\n<h2>Navigateur:</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">atob</span><span class=\"token punctuation\">(</span>b64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"https://developer.mozilla.org/fr/docs/Web/API/WindowOrWorkerGlobalScope#Methods\">https://developer.mozilla.org/fr/docs/Web/API/WindowOrWorkerGlobalScope#Methods</a></p>\n<h1>Express</h1>\n<p><a href=\"https://www.npmjs.com/package/basic-auth\">basic-auth</a> est un middleware Express (Nodejs) qui implémentent la Basic Auth.</p>"}},"staticQueryHashes":["1026020893","2750442709","28434099"]}