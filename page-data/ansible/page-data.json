{
    "componentChunkName": "component---src-templates-wp-post-tsx",
    "path": "/ansible",
    "result": {"pageContext":{"id":"23d4fbc4-a04f-57ed-bbe5-7cbd1cb39c5f","fileAbsolutePath":"/home/behrouze/Sources/gatsby-blog/obsidian/Blog/ansible.md","frontmatter":{"categories":["devops"],"date":"2020-04-04","lastUpdate":null,"tags":["devops","linux","productivite"],"title":"Ansible"},"html":"<p>Outil permettant de <strong>déployer</strong>, <strong>modifier</strong>, maintenir la <strong>configuration</strong> (fichiers, services, etc.) d’un nombre important d’hôtes de <strong>façon centralisée</strong> (via ssh)</p>\n<h2>Concepts et vocabulaire</h2>\n<p>Les <a href=\"https://docs.ansible.com/ansible/latest/user_guide/basic_concepts.html\">concepts</a> utilisés sont assez simple, on parle de :</p>\n<ul>\n<li><strong>nœuds</strong> : éléments du réseau: serveurs, matériel réseau, IOC etc.</li>\n<li>nœud <strong>contrôleur</strong> ou nœud <strong>maitre</strong> : machine qui va exécuter les commandes <code class=\"language-text\">ansible</code> et <code class=\"language-text\">ansible-playbook</code> etc qui vont déclencher l’exécution des modules Ansible sur les nœuds enfants</li>\n<li>nœuds <strong>gérés</strong> ou nœuds <strong>enfants</strong></li>\n<li><strong>inventaire</strong> : liste structurée des nœuds à gérer</li>\n<li><strong>tache</strong> : unité d’exécution d’Ansible</li>\n<li><strong>playbooks</strong> : ensemble de taches Ansible a exécuter (fichier <code class=\"language-text\">.yml</code>)</li>\n<li><strong>modules</strong> : c’est là qu’on trouve la puissance de cet outil tant le <a href=\"https://docs.ansible.com/ansible/latest/modules/list_of_all_modules.html\">nombre de modules fournis est important</a> et permet de gérer des type de nœuds ou taches variés</li>\n</ul>\n<h3>Modules Ansible</h3>\n<p>Ansible dispose d’un système de <a href=\"https://docs.ansible.com/ansible/latest/collections/index.html\">collections de modules</a> qui lui permettent d’agir sur les nœuds, a l’aide d’un outil dédié par module</p>\n<p>On trouvera par exemple le module <a href=\"https://docs.ansible.com/ansible/latest/modules/command_module.html#command-module\">command</a> qui permet d’exécuter une commande sur les machine distantes.</p>\n<h2>Installation</h2>\n<p><strong>Ansible</strong> doit être <a href=\"https://docs.ansible.com/ansible/latest/reference_appendices/python_3_support.html#using-python-3-on-the-managed-machines-with-commands-and-playbooks\">pour utiliser Python 3</a> il faut effectuer une manip dans le fichier d’inventaire (ou spécifier l’argument -e des CLI) :</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token header\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">all:vars</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">ansible_python_interpreter</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">/usr/bin/python3</span></code></pre></div>\n<h2>Commande ad-hoc</h2>\n<p>Il est possible d’exécuter une commande de façon unitaire, pour cela on utilisera la commande <code class=\"language-text\">ansible</code>:</p>\n<p>ansible meswebservers -i inventaire.conf -m copy -a \"src=<del>/fichier dest=</del>/chemin/fichierdest\" --check --diff</p>\n<p>ansible meswebservers -i inventaire.conf -m service -a \"name=wpa_supplicant state=stopped enabled=no\" --become</p>\n<p>ansible meswebservers -i inventaire.conf -m apt -a \"update_cache=yes autoclean=yes\" --become</p>\n<ul>\n<li><code class=\"language-text\">-m</code> : nom du module utilisé (ici <a href=\"https://docs.ansible.com/ansible/latest/modules/copy_module.html#parameters\">copy</a>)</li>\n<li><code class=\"language-text\">-i</code> : nom du fichier d’inventaire (possible d’utiliser localhost à la place)</li>\n<li><code class=\"language-text\">-a</code> : arguments du module</li>\n<li><code class=\"language-text\">--check</code> : <em>dry run</em></li>\n<li><code class=\"language-text\">--diff</code> : montre les différences à l’exécution</li>\n<li><code class=\"language-text\">--become</code> : effectue un <code class=\"language-text\">sudo</code></li>\n</ul>\n<h2>Playbooks</h2>\n<p>Le mode d’utilisation par <a href=\"https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html\">yaml</a>) permet réellement d’orchestrer, ordonnancer de façon synchrone ou asynchrone des ensemble de <em>plays</em>.</p>\n<p>Voici un exemple de playbook (exemple.yml):</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> meswebservers\n<span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">copy</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">src</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"~/fichier\"</span>\n      <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"chemin/fichierdest\"</span></code></pre></div>\n<p>et on exécute le contenu de ce fichier avec la commande:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">ansible-playbook -i inventaire.cfg --check exemple.yml</code></pre></div>\n<h2>Modules</h2>\n<p>Les <a href=\"https://docs.ansible.com/ansible/latest/modules/list_of_all_modules.html\">modules</a> sont le cœur d’Ansible et permettent les exécutions sur les nœuds distants:</p>\n<ul>\n<li><a href=\"https://docs.ansible.com/ansible/latest/reference_appendices/glossary.html#term-facts\">facts</a> concernant des nœuds.<br>\nVoir <code class=\"language-text\">gather_subset</code> et <code class=\"language-text\">gather_facts</code></li>\n</ul>\n<h2>Liens</h2>\n<p><a href=\"https://blog.gruntwork.io/why-we-use-terraform-and-not-chef-puppet-ansible-saltstack-or-cloudformation-7989dad2865c\">Configuration Management vs Provisioning</a></p>\n<p><a href=\"https://www.edureka.co/blog/chef-vs-puppet-vs-ansible-vs-saltstack/\">popularité</a> des configuration management tools (Chef, Puppet, Ansible, et SaltStack)</p>\n<p><a href=\"https://www.ansible.com/resources/videos/quick-start-video?extIdCarryOver=true&#x26;sc_cid=701f2000001OH7YAAW\">Vidéo d’introduction</a> sur Ansible</p>"}},
    "staticQueryHashes": ["1026020893","1333896537","28434099"]}