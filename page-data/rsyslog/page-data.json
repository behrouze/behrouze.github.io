{
    "componentChunkName": "component---src-templates-wp-post-tsx",
    "path": "/rsyslog",
    "result": {"pageContext":{"id":"2b809bdd-2a59-5e74-88f6-b2ed01d2a733","fileAbsolutePath":"/Users/behrouze/Sources/gatsby-blog/obsidian/Blog/rsyslog.md","frontmatter":{"categories":["devops"],"date":"2019-08-17","lastUpdate":null,"tags":["debian","devops","linux","raspberry-pi","shell"],"title":"Rsyslog"},"html":"<p><a href=\"https://blog.behrouze.com/rsyslog/#Cote_serveur\">3 Cot√© serveur</a></p>\n<h1>Notions</h1>\n<p>Rsyslog se configure assez simplement lorsqu‚Äôon a compris les notions de <strong>s√©lecteurs</strong> et d‚Äô<strong>actions</strong> :</p>\n<h2>S<strong>√©lecteurs</strong></h2>\n<p>Un s√©lecteur, est un couple <strong><a href=\"https://web.archive.org/web/20210116024411/https://debian-handbook.info/browse/fr-FR/stable/sect.syslog.html\">facility.priority</a></strong> qui va d√©terminer la provenance des logs √† traiter.</p>\n<ul>\n<li><strong>Facility</strong> d√©signe un <em>sous-syst√®me applicatif concern√©</em> (par ex cron, daemon, auth, mail etc.)</li>\n<li><strong>Priority</strong> d√©signe la <em>priorit√©</em> des messages √† traiter.</li>\n</ul>\n<p>Dans la <em>configuration</em>, il est possible de sp√©cifier un <strong>ensemble de couples facility.priority</strong> s√©par√©s par des <strong>virgules</strong>, et il est √©galement possible d‚Äôutiliser des <strong>*</strong> (joker).</p>\n<h2>Actions</h2>\n<p>A chaque s√©lecteur (ou ensemble de s√©lecteurs) nous associons une <strong>action</strong> qui consiste √† <em>envoyer ces logs</em> vers un <em>fichier</em> ou vers un <em>serveur de logs</em>.<br>\nLes actions d√©terminent donc la destination des logs.</p>\n<h1>Configuration</h1>\n<p>Le fichier de configuration nous permet de sp√©cifier les <strong>s√©lecteurs</strong> (le couple <strong>facility.priority</strong>) et l‚Äô<strong>action</strong> associ√©e.</p>\n<p>Il existe un fichier de configuration principal <code class=\"language-text\">/etc/rsyslog.conf</code> qui peut inclure d‚Äôautres fichiers (situ√©s par ex dans <code class=\"language-text\">/etc/rsyslog.d/</code>) gr√¢ce √† la directive <code class=\"language-text\">$IncludeConfig /etc/rsyslog.d/*.conf</code> .</p>\n<h2>Cot√© clients</h2>\n<p>Les clients doivent d√©terminer s‚Äôils doivent envoyer leurs logs dans un fichier <strong>local</strong> ou √† travers le <strong>r√©seau</strong> en <strong>TCP</strong> ou en <strong>UDP</strong>, mais surtout indiquer <strong>quels logs</strong>, √† <strong>quel niveau de s√©v√©rit√©</strong> ils souhaitent envoyer, et <strong>o√π l‚Äôenvoyer</strong>, voici quelques exemples.</p>\n<h3>logs locaux</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">cron.*                              /var/log/cron.log\nauth,authpriv.err                   /var/log/auth.log\n*.*<span class=\"token punctuation\">;</span>cron,auth,authpriv.none        -/var/log/syslog</code></pre></div>\n<ol>\n<li>nous souhaitons envoyer <em>tous les niveaux de logs de cron</em> vers le fichier sp√©cifi√©</li>\n<li>nous avons la notation <code class=\"language-text\">facility1,facility2.priority</code> qui sp√©cifie que les logs de priorit√© (ici error) des 2 facilities sp√©cifi√©s partirons vers auth.log</li>\n<li>tous les messages en dehors des logs des 3 services sp√©cifi√©s (par le <code class=\"language-text\">.none</code>)</li>\n</ol>\n<h3>logs distants</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">*.* @monserveurdelog.fr:514\nauth.err @monserveurdelog.fr:514</code></pre></div>\n<ul>\n<li><em>.</em> : indique d‚Äôenvoyer tous les logs</li>\n<li>@ ou @@ : indique d‚Äôenvoyer en UDP ou TCP</li>\n<li>monserveurdelog.fr:514 : adresse et port du serveur de logs</li>\n</ul>\n<h2>Troubleshooting</h2>\n<p>Pour <em>tester si notre configuration</em> fonctionne bien et que le client envoi bien ses erreurs au serveur (ou en local), il est possible de g√©n√©rer une fausse erreur via la commande <code class=\"language-text\">logger</code> :</p>\n<p>logger -p authpriv.alert \"ca fonctionne ü§úü§õ\"</p>\n<h1>Cot√© serveur</h1>\n<p>modifier le fichier de fa√ßon √† permettre la r√©ception des logs en UDP et/ou TCP:</p>\n<p>$ModLoad imudp\n$UDPServerRun 514</p>\n<p>$ModLoad imtcp\n$InputTCPServerRun 514</p>\n<p>puis param√©trer la <strong>whiteliste</strong> d‚ÄôIP autoris√©s etc.</p>\n<p>Voir <a href=\"https://web.archive.org/web/20210116024411/https://wiki.debian.org/fr/Rsyslog\">doc Debian</a>.</p>"}},
    "staticQueryHashes": ["1026020893","28434099","3153813225"]}