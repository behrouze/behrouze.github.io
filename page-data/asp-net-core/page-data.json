{"componentChunkName":"component---src-templates-wp-post-tsx","path":"/asp-net-core","result":{"pageContext":{"id":"ff7a3f5b-5d93-526e-84d1-03a7899946f9","fileAbsolutePath":"/home/behrouze/Sources/blog/obsidian/Blog/asp-net-core.md","frontmatter":{"categories":["dot-net"],"date":"2020-01-02","lastUpdate":null,"tags":["net-core","c-sharp","microsoft","visual-studio"],"title":"ASP.Net Core"},"html":"<h1>Éléments</h1>\n<ul>\n<li>pour <em>développer</em>: .Net Core 3 <a href=\"https://github.com/OmniSharp/omnisharp-vscode#c-for-visual-studio-code-powered-by-omnisharp\">extension C#</a></li>\n</ul>\n<h1>Historique</h1>\n<ul>\n<li><a href=\"https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/\">.NET Framework 4.8</a> (Avril 2019) sera la dernière version maintenu du <em>.Net Framework</em></li>\n</ul>\n<h1>Créer un nouveau projet</h1>\n<p>Utiliser <strong>Visual Studio 2019</strong> ou le <strong>SDK</strong> <a href=\"https://blog.behrouze.com/chocolatey/\">chocolatey</a> (qui est également installé automatiquement avec Visual Studio 2019).</p>\n<h2>Utilisation de la commande dotnet</h2>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">dotnet <span class=\"token operator\">--</span>info                <span class=\"token comment\"># check le PATH et versions des SDK/Runtime dispo</span>\ndotnet new <span class=\"token operator\">--</span>help      <span class=\"token comment\"># liste les templates disponibles</span>\ndotnet new webapp  <span class=\"token comment\"># cré une solution WebApi</span>\ndotnet restore             <span class=\"token comment\"># restore les packages Nuget</span>\ndotnet build               <span class=\"token comment\"># compile le source en binaire, l'assembly .dll</span>\ndotnet run                   <span class=\"token comment\"># effectue un dotnet build puis lance l'application</span>\ndotnet xxx<span class=\"token punctuation\">.</span>dll              <span class=\"token comment\"># exécute l'assembly</span>\ndotnet run <span class=\"token operator\">--</span> mes_args <span class=\"token comment\"># le -- permet à la commande dotnet de ne pas interpréter mes_args comme un de ses paramètres mais de les transférer au programme exécuté</span></code></pre></div>\n<h2>Création d’éléments de solution</h2>\n<p><a href=\"https://docs.microsoft.com/fr-fr/aspnet/core/fundamentals/tools/dotnet-aspnet-codegenerator?view=aspnetcore-3.1\">MS nous met à disposition</a> un outil <code class=\"language-text\">dotnet aspnet-codegenerator</code> qui est un <strong>générateur de code</strong>, qui permet de remplacer l’interface de Visual Studio lorsqu’on cré des nouveaux éléments au seins de notre solution.</p>\n<h1>Injection de dépendances</h1>\n<p>Dans les principes <a href=\"https://docs.microsoft.com/fr-fr/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-3.1\">ASP.NET Core nous fournit l’outillage</a> nécessaire pour cela.</p>\n<p>L’intérêt est de permettre de pouvoir remplacer simplement les classes consommés et faciliter les Tests Unitaires.</p>\n<p>voir tuto Youtube de Tim Corey à propos du <a href=\"https://www.youtube.com/watch?v=mCUNrRtVVWY\">Injection de Dépendances</a>.</p>\n<h1>Troubleshooting</h1>\n<p>Pour que Visual Studio 2019 puisse lancer l’exécutable <em>node</em>, en cas d’utilisation de <strong>nvm</strong> (notamment sur MAC), il faut créer un lien :</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">ln</span> -s <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">command</span> -v <span class=\"token function\">node</span><span class=\"token variable\">`</span></span> /usr/local/bin/node</code></pre></div>\n<h1>Screenshots</h1>\n<p><img src=\"images/Screen-Shot-2020-01-02-at-14.15.15-617x285.png\" alt=\"VSCode asssistant\"></p>\n<p>assistant VSCode permettant de créer automatiquement les fichiers dans .vscode: launch.json et tasks.json</p>\n<h1>Liens</h1>\n<p>Toujours pour chercher/trouver un package NuGet: <a href=\"https://edi.wang/post/2019/9/29/setup-net-core-30-runtime-and-sdk-on-raspberry-pi-4\">setup pour Raspberry Pi 4</a></p>\n<p>Injection de dépendances en .Net Core pour des <a href=\"https://docs.microsoft.com/fr-fr/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-3.1\">Services</a></p>"}},"staticQueryHashes":["1026020893","28434099","3153813225"]}