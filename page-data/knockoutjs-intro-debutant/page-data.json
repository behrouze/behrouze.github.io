{"componentChunkName":"component---src-templates-wp-post-tsx","path":"/knockoutjs-intro-debutant","result":{"pageContext":{"id":"78388c56-ee17-5937-877e-326e0196dac0","fileAbsolutePath":"/Users/behrouze/Sources/gatsby-blog/obsidian/Blog/knockoutjs-intro-debutant.md","frontmatter":{"categories":["programmation"],"date":"2015-05-09","lastUpdate":null,"tags":["javascript","tutoriel","knockoutjs"],"title":"KnockoutJS intro débutant"},"html":"<h2>Introduction</h2>\n<p>Aujourd'hui il existe de nombreux framework JavaScript comme Knockout ( JQuery, Dojo, BackBone, AngularJS) et chacune possède des points forts/faibles comme la courbe d'apprentissage (KnockoutJS est bien plus simple et rapide à prendre en main qu'Angular), le nombre de fonctionnalités \"utiles\". Les caractéristiques de KnockoutJS sont:</p>\n<ul>\n<li>c'est une librairie légère (&#x3C;60ko) et autonome (ne dépend pas d'autres frameworks)</li>\n<li>permet de structurer son code JavaScript de sorte à avoir un découpage claire en <a href=\"http://knockoutjs.com/documentation/observables.html#mvvm-and-view-models\">3 composants du design pattern MVVM</a>:</li>\n</ul>\n<ol>\n<li>le <strong>Modèle</strong>: les données et comportement métiers généralement coté serveur via un appel de WebService comme Web API par exemple</li>\n<li>la <strong>Vue</strong>: la partie visible de l'iceberg, c'est la partie UI</li>\n<li>le <strong>ViewModel</strong>: la partie intelligente de votre interface, manipulant les données à afficher</li>\n</ol>\n<p>Les points forts de Knockout sont les suivants:</p>\n<ul>\n<li>permet d'associer simplement les éléments du DOM avec son Model (en passant par le ViewModel) sans avoir à se préoccuper de son arborescence (n'utilise pas de sélecteurs CSS comme JQuery)</li>\n<li>facilite le rafraichissent en direct des éléments de la page</li>\n<li>gère les dépendance entre Modèles (par ex, il est possible de composer un Model à partir de plusieurs autres)</li>\n<li>Knockout dispose également d'une fonctionnalité de templating</li>\n</ul>\n<h2>Usage</h2>\n<ol>\n<li>inclure la version de Knockout voulue via un <a href=\"http://knockoutjs.com/downloads/#content-delivery-networks-cdns\">CDN</a> ou en copiant le script en local <code class=\"language-text\">&lt;script src=\"/scripts/knockout/knockout-min.js\">&lt;/script></code></li>\n<li>écrire sa <strong>Vue</strong> (donc son HTML) en incluant quelques attributs magiques ;) <code class=\"language-text\">Coucou, je m'appel &lt;span data-bind=\"text: myName\">&lt;/span></code></li>\n<li>écrire son <strong>ViewModel</strong> en JavaScript: <code class=\"language-text\">var monViewModel = { myName: 'Brooz' };</code></li>\n<li>relier les 2 par l'instruction suivante toujours dans son JavaScript <code class=\"language-text\">ko.applyBindings(monViewModel );</code></li>\n</ol>\n<p>Comme on peu le remarquer il manque la partie <strong>Model</strong> du MVVM :) Comme indiqué plus haut, c'est la partie métier (ici la donnée <code class=\"language-text\">myName: 'Brooz'</code> pourrait provenir d'un WebService par ex).</p>\n<h2>Exemple</h2>\n<iframe width=\"100%\" height=\"190\" src=\"//jsfiddle.net/behrouze/a8s4xpjv/embedded/js,html,result/\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n<h2>Liens</h2>\n<p><a href=\"http://learn.knockoutjs.com/\">tuto du site officiel</a> de KnockoutJS qui permet de s'exercer en live <a href=\"http://knockoutjs.com/downloads/#content-delivery-networks-cdns\">scripts KnockoutJS en CDN</a> <a href=\"https://jsfiddle.net/\">JSFiddle un éditeur Javascript online</a> permettant de se faire des petits POC rapides</p>"}},"staticQueryHashes":["1026020893","2750442709","28434099"]}