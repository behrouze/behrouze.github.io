{
    "componentChunkName": "component---src-templates-wp-post-tsx",
    "path": "/pwa-lighthouse",
    "result": {"pageContext":{"id":"6ad46802-3af6-5a98-87f9-0bb1190c441b","fileAbsolutePath":"/Users/behrouze/Sources/gatsby-blog/obsidian/Blog/pwa-lighthouse.md","frontmatter":{"categories":["javascript"],"date":"2018-06-01","lastUpdate":null,"tags":["fullstack","performance"],"title":"PWA & Lighthouse"},"html":"<h2>compatibilité PWA</h2>\n<p><a href=\"https://developers.google.com/web/tools/lighthouse/\">Lighthouse</a> nous rappel quelques point pour être <a href=\"https://www.blogdumoderateur.com/prospective-amp-pwa/\">PWA compilent</a> dont:</p>\n<ul>\n<li>disposer d'un <a href=\"https://developer.mozilla.org/fr/docs/Web/Manifest\"><code class=\"language-text\">manifest.json</code></a> accompagné d'un set de <code class=\"language-text\">*.png</code> pour les icones et splash-screen (<a href=\"https://app-manifest.firebaseapp.com/\">outil</a>)</li>\n<li>passer toutes les requetes en <a href=\"https://www.quadran.eu/impact-http2-performances-services-web/\"><code class=\"language-text\">http2</code></a> (le pré-requis étant de déja servir les pages en <code class=\"language-text\">https</code>), donc configurer le reverse proxy (pour ngninx: <code class=\"language-text\">listen 443 ssl http2;</code>)</li>\n<li>être <a href=\"https://search.google.com/test/mobile-friendly\">mobile friendly</a> et adaptatif (<a href=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/#set-the-viewport\">responsive</a>) avec les <strong>meta tag</strong> <code class=\"language-text\">viewport</code> et des fichiers js et css <em>minifiés</em></li>\n<li>utiliser un <a href=\"https://developers.google.com/web/fundamentals/primers/service-workers/\">service-worker</a> avec ou sans <a href=\"https://googlechromelabs.github.io/sw-toolbox\">sw-toolbox</a></li>\n</ul>"}},
    "staticQueryHashes": ["1026020893","28434099","3153813225"]}