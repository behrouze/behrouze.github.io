{
    "componentChunkName": "component---src-templates-wp-post-tsx",
    "path": "/extension-firefox-chrome",
    "result": {"pageContext":{"id":"3747bea0-9409-5946-a3f7-ebeac55dc9bf","fileAbsolutePath":"/home/behrouze/Sources/gatsby-blog/obsidian/Blog/extension-firefox-chrome.md","frontmatter":{"categories":["javascript"],"date":"2020-12-18","lastUpdate":null,"tags":["chrome","extension","firefox","javascript","mozilla"],"title":"Extension Firefox/Chrome"},"html":"<p>Les <strong>extensions</strong> sont un type d’<strong>add-ons</strong> (ou <strong>modules</strong>) pour les navigateurs (les 2 autres types d’add-ons sont : les <a href=\"https://support.mozilla.org/kb/use-firefox-interface-other-languages-language-pack\">language packs</a>).</p>\n<p>Les extensions sont de <em>véritables applications</em> qui <strong>ajoutent des fonctionnalités</strong> au navigateur qui peuvent se <a href=\"https://addons.mozilla.org/en-US/firefox/addon/react-devtools/\">React dev tools</a>) ou encore d’ajouter des entrées dans le <em>menu contextuel</em> du navigateur.</p>\n<p>Le <strong>développement</strong> d’une extension repose sur des technos web classique <strong>javascript/html/css</strong>, une <strong>API</strong> <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Firefox_workflow_overview\"><strong>workflow</strong></a> déterminé (concevoir, développer soumettre et gérer la vie de l’extension).</p>\n<p>Pour finir, il est possible d’écrire des extensions <em>compatibles</em> <strong>Firefox</strong> et <strong>Chrome</strong> (ou plus généralement les navigateurs basés sur <a href=\"https://brave.com/fr/\">Brave</a>) grâce à la prise en charge du namespace chrome par Firefox…</p>\n<p>Voici le <strong>portail grand publique</strong> <a href=\"https://addons.mozilla.org/fr/firefox/\">AMO</a>.</p>\n<h2>Point de départ documentaire</h2>\n<p>Mozilla nous fourni beaucoup de documents (de meilleurs qualité en anglais ??) pour créer des extensions :</p>\n<ul>\n<li><a href=\"https://design.firefox.com/photon/introduction/principles.html\">Photon Design System</a>, portail Mozilla est dédié aux <em>best practices</em> et <em>design UI</em> des extension pour Firefox</li>\n</ul>\n<h2>La Big Picture</h2>\n<p>Le projet de développement d’une extension doit être composé d’une <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json\">manifest.json</a> qui va <em>décrire l’extension</em>, ses <em>permissions</em> ainsi que ses <em>composants</em> : icônes, nom et points d’entrées.</p>\n<p>Une extension est composé d’une <em>combinaison de ces composants</em> :</p>\n<ul>\n<li>une <a href=\"https://developer.mozilla.org/fr/docs/Mozilla/Add-ons/WebExtensions/Anatomy_of_a_WebExtension#Scripts_de_contenu\">scripts de contenu</a> : modification du DOM d’une page</li>\n</ul>\n<h2>web-ext l’assistant</h2>\n<p>Avec <code class=\"language-text\">web-ext</code> Mozilla nous fourni un outil qui améliore le confort de développement en nous évitant certaintes étapes manuelles comme le re/chargement d’extension… (le fameux <em>about:debugging#/runtime/this-firefox</em>).<br>\nCette outil est requiert <a href=\"https://github.com/nvm-sh/nvm/blob/master/README.md#installing-and-updating\">NodeJS</a>.</p>\n<h3>Installation et Run</h3>\n<p>L’<a href=\"https://extensionworkshop.com/documentation/develop/getting-started-with-web-ext/\">installation</a> de web-ext s’effectue avec un simple <code class=\"language-text\">npm i --global web-ext</code><br>\nPar exemple, sur mon poste il a été installé ici :<br>\n<code class=\"language-text\">/home/behrouze/.nvm/versions/node/v14.15.2/bin/web-ext</code></p>\n<p>Il suffit ensuite de se déplacer dans le dossier de notre projet de dév d’extension et de lancer :</p>\n<ul>\n<li>en mode watcher par défaut : <code class=\"language-text\">web-ext run</code></li>\n<li>avec ouverture auto de la console : <code class=\"language-text\">web-ext run --browser-console</code></li>\n<li>avec utilisation du profile Firefox : <code class=\"language-text\">web-ext run --firefox-profile nom_profile_firefox</code><br>\n<em>le nom du profile se récupère : <code class=\"language-text\">about:profiles</code></em></li>\n</ul>\n<p><code class=\"language-text\">web-ext run --browser-console --firefox-profile default-release</code></p>\n<h3>Usage</h3>\n<p>Une autre commande bien utile est le <a href=\"https://extensionworkshop.com/documentation/develop/web-ext-command-reference/#web-ext-lint\">linter</a> <code class=\"language-text\">web-ext lint</code> qui va vérifier le manifest, les permissions et des incohérences dans le projet (à lancer avant de packager le projet).</p>\n<p><code class=\"language-text\">web-ext build</code> et <code class=\"language-text\">web-ext sign</code> permettent finalement de <strong>builder</strong> (packager) et <strong>signer</strong> son extension (<a href=\"https://extensionworkshop.com/documentation/develop/getting-started-with-web-ext/#packaging-your-extension\">voir doc</a>).</p>\n<h3>web-ext docs</h3>\n<p>Voir aussi <code class=\"language-text\">web-ext --help</code> ainsi que la <a href=\"https://extensionworkshop.com/documentation/develop/web-ext-command-reference/\">liste toutes les commandes</a> disponibles.</p>\n<h2>Liens</h2>\n<h3>Docs</h3>\n<ul>\n<li><a href=\"https://developer.chrome.com/docs/extensions/\">Chrome Developers</a></li>\n</ul>\n<h3>Exemples de code</h3>\n<ul>\n<li><a href=\"https://github.com/GoogleChrome/chrome-extensions-samples/blob/master/extensions/gmail/background.js\">icône avec compteur</a>)</li>\n</ul>\n<h3>Vidéos</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=Q3AQ5D2QFwc\">How to build an extension for Firefox in less than 5 minutes</a> (5 min)</li>\n</ul>"}},
    "staticQueryHashes": ["1026020893","1333896537","28434099"]}