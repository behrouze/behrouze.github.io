{
    "componentChunkName": "component---src-templates-wp-post-tsx",
    "path": "/entity-framework",
    "result": {"pageContext":{"id":"30e950d8-dc22-537d-a331-8ec98a1fd94a","fileAbsolutePath":"/home/behrouze/Sources/gatsby-blog/obsidian/Blog/entity-framework.md","frontmatter":{"categories":["dot-net"],"date":"2014-08-17","lastUpdate":null,"tags":["net-framework","dotnet","entity-framework","microsoft"],"title":"Entity Framework intro"},"html":"<p>Dans cet article, je vais présenter l'<strong>ORM</strong> de Microsoft nommé <strong>Entity Framework</strong>.</p>\n<h2> Entity Framework, ça sert à quoi ?</h2>\n<p>Entity Framework est un ORM (<strong>Object-relational mapping</strong>) permettant d'interagir avec une source de donnée de type <strong>base de données</strong>, en manipulant des <strong>objets</strong> directement (sans avoir à écrire du code SQL) grâce à un langage de requetage propre au .Net Framework qui est Linq (Language-Integrated Query).</p>\n<h2>les différents \"modes\" d'Entity Framework</h2>\n<p>Il existe <strong>3 modes</strong> permettant de générer cette couche d'accès aux données:</p>\n<ul>\n<li>Code First</li>\n<li>Database First</li>\n<li>Model First (deprecated)</li>\n</ul>\n<h3>mode <strong>EF Database First</strong></h3>\n<p>Dans ce mode, nous utilisons EF pour nous générer des classes à partir d'une base de donnée existante. EF va nous générer via un assistant dans Visual Studio, des classes correspondant à nos tables de base de données et un \"contexte\" qui est la version \"objet\" de la base de donnée elle même.</p>\n<h3>mode EF Model First</h3>\n<p>Visual Studio (à partir de VS 2010) d'un outil graphique de modélisation de classes qui permettra à Entity Framework de générer la base de données correspondante (de facon presqu'invisible) d'un coté et de nous donner accès au \"contexte\" et \"entités\" de l'autre. <em>(Abandonné par Microsoft)</em></p>\n<h3>mode Code First</h3>\n<p>le mode <strong>le plus intéressant</strong> pour nous autre développeurs, car il nous permet de simplement générer la base de données à partir de nos classes POCO (des classes toutes simple composés de Propriétés).</p>\n<p>Pourquoi ce mode code first nous intéresse-t-il ?</p>\n<ol>\n<li>car il permet d'une part de nous soucier de notre code <strong>sans avoir à écrire de SQL</strong> ou configurer notre base de données à travers un outil</li>\n<li>nous gardons le <strong>contrôle de la structure de la base de donnée</strong> et il nous est possible de synchroniser le schéma grâce à notre code (ça se fait pas tout seul, mais il y a un mode de migration, nous y reviendront dans un autre post). Dans les 2 autres modes il faut modifier plusieurs éléments de l'architecture en cas de modif structurelles de la base.</li>\n<li>grâce aux <a href=\"https://marketplace.visualstudio.com/items?itemName=ErikEJ.EntityFramework6PowerToolsCommunityEdition#overview\" title=\"EF Power Tools\">Entity Framework Power Tools</a>, il est possible de faire du <strong>reverse engineering</strong> en faisant <strong>générer les classes POCO depuis une base de donnée existante</strong> et d'utiliser EF en mode Code First ensuite ! C'est pas génial ça  :) ?</li>\n</ol>\n<p>En tant que développeur ou architecte il vous faudra donc choisir entre ces 3 modes d'utilisations.</p>\n<h2> Tests Unitaires</h2>\n<p>N'oublions pas que l'avantage de découper son projet en plusieurs \"couches\" est de facilité la maintenance du code (surtout en cas de migrations), et de rendre chaque couche plus facilement testable indépendamment des autres.</p>\n<p>Lire les 2 articles suivants qui passent en revue les fonctionnalités d'EF6:</p>\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/magazine/dn532202.aspx\" title=\"EF6 par Julie Lerman\">Entity Framework 6: The Ninja Edition par Julie Lerman</a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/data/dn314429\" title=\"EF6 mocking\">Testing with a mocking framework</a></li>\n</ul>\n<h2>Pour finir, quelques liens indispensables</h2>\n<h3>Les bases</h3>\n<ul>\n<li>le <a href=\"https://docs.microsoft.com/fr-fr/ef/ef6/index\" title=\"EF sur MSDN\">portail d'Entity Framework sur le site MSDN</a> avec sa <a href=\"http://msdn.microsoft.com/en-US/data/ee712907\" title=\"documentation Entity Framework sur MSDN\">documentation</a> (<a href=\"https://docs.microsoft.com/fr-fr/ef/ef6/get-started\" title=\"documentation Entity Framework sur MSDN en Français\">documentation en français)</a></li>\n<li>tutoriel <a href=\"https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/getting-started-with-ef-using-mvc/creating-an-entity-framework-data-model-for-an-asp-net-mvc-application\" title=\"tutoriel EF6\">EF6 et MVC5</a></li>\n<li>les vidéos indispensables de MSDN Channel9</li>\n</ul>\n<h3>Plus avancé</h3>\n<ul>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/\" title=\"Entity Framework news\">dernières news</a> (<a href=\"https://blogs.msdn.microsoft.com/adonet/tag/entity-framework/\">ancien blog</a>) à propos d'Entity Framework</li>\n<li><a href=\"https://github.com/aspnet/EntityFramework6\" title=\"code source d&#x27;EF sur CodePlex\">code source d'Entity Framework 6</a> sur CodePlex</li>\n<li><a href=\"https://docs.microsoft.com/fr-fr/ef/efcore-and-ef6/\">EF 6 vs EF Core</a></li>\n</ul>\n<h3>Technique</h3>\n<ul>\n<li>les 2 namespaces à inclure pour les <strong>annotations</strong>:\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations%28v=vs.110%29.aspx\" title=\"namespace DataAnnotations pour annotations EF\">System.ComponentModel.DataAnnotations</a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations.schema%28v=vs.110%29.aspxhttp://\" title=\"namespace DataAnnotations.Schema pour annotations EF\">System.ComponentModel.DataAnnotations.Schema</a></li>\n</ul>\n</li>\n<li><a href=\"http://www.entityframeworktutorial.net/code-first/inheritance-strategy-in-code-first.aspx\">article</a> sur le <a href=\"http://blogs.msdn.com/b/alexj/archive/2009/04/15/tip-12-choosing-an-inheritance-strategy.aspx\" title=\"How to choose an Inheritance Strategy EF Code First\">choix de la stratégie d'héritage</a>, en EF Code First pour générer les tables de la BDD en utilisant la notion d'héritage de classes de C#</li>\n<li>article sur la <a href=\"http://blogs.msdn.com/b/rickandy/archive/2013/02/12/seeding-and-debugging-entity-framework-ef-dbs.aspx\" title=\"EF database seeding\">population de la base de donnée par EF Code First (seeding)</a></li>\n</ul>\n<h2>Mémo</h2>\n<p>Lorsqu'on utilise Code First pour générer la base de donnée par défaut (sans fournir d'infos à propos de la destination), la base de donnée créer pour le contexte se trouve, selon la base de données installée dans votre environnement :</p>\n<ul>\n<li>dans la LocalDb <strong>(localdb)v11.0</strong></li>\n<li>ou dans SQL Express <strong>.SQLEXPRESS</strong></li>\n</ul>\n<p><a href=\"http://msdn.microsoft.com/en-us/data/jj591583.aspx\" title=\"EF data annotations\">liste des data annotations</a> (attention aux namespaces que vous importez, cela dépend de la version d'EF... <a href=\"http://www.techiesweb.net/column-attribute-in-entity-framework-5/\">un exemple</a>)</p>"}},
    "staticQueryHashes": ["1026020893","1333896537","28434099"]}