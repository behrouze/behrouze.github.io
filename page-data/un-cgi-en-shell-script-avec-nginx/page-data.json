{"componentChunkName":"component---src-templates-wp-post-tsx","path":"/un-cgi-en-shell-script-avec-nginx","result":{"pageContext":{"id":"21edbe66-bf50-5730-ab17-313cbc3607ef","fileAbsolutePath":"/Users/behrouze/Sources/gatsby-blog/obsidian/Blog/un-cgi-en-shell-script-avec-nginx.md","frontmatter":{"categories":["devops"],"date":"2019-09-13","lastUpdate":null,"tags":["bash","nginx","raspberry-pi","shell"],"title":"un CGI en shell script avec Nginx"},"html":"<p>Il est possible tr√®s simplement d‚Äô<strong>ex√©cuter un script shell</strong> sur le serveur web type <strong>Nginx</strong> avec <a href=\"https://github.com/gnosek/fcgiwrap#readme\">fcgiwrap</a>, cela permet d‚Äôacc√©der aux outils du syst√®me et d‚Äôafficher dans un page web les r√©sultats trait√©s.</p>\n<h1>Etapes</h1>\n<ol>\n<li>disposer d‚Äôun <strong>serveur web Nginx</strong> qui tourne (ou <code class=\"language-text\">apt install nginx</code>)</li>\n<li>installer le script <a href=\"https://github.com/gnosek/fcgiwrap#fcgiwrap\"><strong>fcgiwrap</strong></a> par <code class=\"language-text\">apt install fcgiwrap</code> (install√© en tant que <em>daemon</em>)</li>\n<li>configurer une section <em>location</em> de Nginx pour faire le <em>lien</em> entre <strong>fcgiwrap</strong>, le <strong>serveur web</strong> et le <strong>script shell</strong> (voir exemple ci-dessous)</li>\n<li>un <strong>script</strong> shell bash ou autres (ne pas oublier le <code class=\"language-text\">chmod +x</code>)</li>\n</ol>\n<h1>Exemple de configuration Nginx</h1>\n<div class=\"gatsby-highlight\" data-language=\"nginx\"><pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token directive\"><span class=\"token keyword\">location</span> ~ /mon-url-script</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token directive\"><span class=\"token keyword\">access_log</span> <span class=\"token boolean\">off</span></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\"># pour ne pas logger les acc√®s</span>\n    <span class=\"token directive\"><span class=\"token keyword\">autoindex</span> <span class=\"token boolean\">off</span></span><span class=\"token punctuation\">;</span>   <span class=\"token comment\"># emp√™che l'indexation et affichage des dossier du serveur</span>\n    <span class=\"token directive\"><span class=\"token keyword\">include</span> fastcgi_params</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># contient les noms des variables CGI de /etc/nginx/fastcgi_params;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">fastcgi_param</span> SCRIPT_FILENAME      /var/www/cgi/monscript.sh</span><span class=\"token punctuation\">;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">fastcgi_pass</span> unix:/var/run/fcgiwrap.socket</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>S√©curit√©</h1>\n<p>Bien √©videmment, ex√©cuter un script shell ou autre sur un serveur web est risqu√© üíÄ\nPour √©viter les trous de s√©curit√© bien penser √† valider tous les inputs <sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup>(tester les scripts avec <a href=\"https://www.cis.upenn.edu/~stevez/papers/MZ07.pdf\">ABASH</a>, <a href=\"https://github.com/koalaman/shellcheck\">shellcheck</a>, et <a href=\"https://sourceforge.net/projects/checkbaskisms/\">checkbashisms</a>)</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\"><a href=\"https://security.stackexchange.com/questions/48259/are-there-any-security-concerns-for-cgi-scripts-written-in-pure-bash\">src</a><a href=\"#fnref-1\" class=\"footnote-backref\">‚Ü©</a></li>\n</ol>\n</div>"}},"staticQueryHashes":["1026020893","2750442709","28434099"]}