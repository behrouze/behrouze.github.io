{
    "componentChunkName": "component---src-templates-wp-post-tsx",
    "path": "/dotnetcore-raspberry",
    "result": {"pageContext":{"id":"1445f0f5-2ba1-585b-b6c9-6b622e7b2528","fileAbsolutePath":"/home/behrouze/Sources/gatsby-blog/obsidian/Blog/dotnetcore-raspberry.md","frontmatter":{"categories":["dot-net"],"date":"2019-01-08","lastUpdate":null,"tags":["net-core","linux","raspberry-pi"],"title":".Net Core sur Raspberry Pi"},"html":"<p>.NET Core qui vient tout juste de sortir en v3, nous permet d'exécuter nos application en mode console ou autres webapps sur <a href=\"https://github.com/dotnet/core-setup#daily-builds\">différentes plate-formes et architectures</a>.</p>\n<h1>Installation du Runtime .NET Core sur <strong>Raspberry Pi</strong></h1>\n<p>Pour faire tourner un site web codé en .NET Core sur un <strong>Raspberry Pi</strong>, il faut installer le Runtime (plate-forme <strong><a href=\"https://github.com/dotnet/core-setup#daily-builds\">armhf</a></strong>):</p>\n<ul>\n<li>installer quelques outils utiles à la suite: sudo apt-get install curl libunwind8 gettext</li>\n<li>puis installer la <a href=\"https://github.com/dotnet/core/releases\">version</a> souhaitée, chercher le lien <a href=\"https://download.visualstudio.microsoft.com/download/pr/860e937d-aa99-4047-b957-63b4cba047de/da5ed8a5e7c1ac3b4f3d59469789adac/aspnetcore-runtime-2.2.0-linux-arm.tar.gz\">ARM32</a> sur la page de la release (ex: <a href=\"https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.0/2.2.0-download.md\">.NET Core Runtime 2.2.0</a>) curl -sSL -o dotnet.tar.gz mettre-ici-le-lien-tar.gz</li>\n<li>créer le dossier et décompresser le fichier récupéré: sudo mkdir -p /opt/dotnet &#x26;&#x26; sudo tar zxf dotnet.tar.gz -C /opt/dotnet</li>\n</ul>\n<p>Le Runtime est alors installé, et vous pouvez tester cela avec la commande :  dotnet --info</p>\n<h1>Publier le site web</h1>\n<p>Il faut ensuite coté machine de dév, se positionner dans son projet .NET Core (créé par ex avec la version gratuite <a href=\"https://visualstudio.microsoft.com/fr/downloads/\">Visual Studio 2017 Community</a>) puis la publier pour Raspberry avec la commande: dotnet publish <code class=\"language-text\">-c Release</code> -r linux-arm . Cela va générer un dossier .\\bin\\Debug\\netcoreapp2.1\\linux-arm\\publish  avec tout les fichiers nécessaire à faire tourner le site !</p>\n<p>Il ne reste plus que quelques étapes:</p>\n<ol>\n<li>transférer l'intégralité du contenu du dossier publish dans le dossier web de destination sur le Raspberry Pi (ex /var/www/monsupersiteendotnet.core)</li>\n<li>chmod 755  la dll du projet (ex <em>chmod 755 monsupersiteendotnet.core.dll</em>)</li>\n<li>lancer le projet (à la main) dotnet monsupersiteendotnet.core.dll</li>\n</ol>\n<p>et voilà, le site tourne en local en exposant un port spécifié dans <strong>launchSettings.json</strong> (clé applicationUrl)</p>\n<h1>Liens</h1>\n<p>Inspiré de ces <a href=\"https://blogs.msdn.microsoft.com/david/2017/07/20/setting_up_raspian_and_dotnet_core_2_0_on_a_raspberry_pi/\">post MSDN</a> et d'un <a href=\"https://blogs.infinitesquare.com/posts/web/heberger-une-application-aspnet-core-2-sur-un-raspberry-pi\">post en Francais</a> . <a href=\"https://github.com/dotnet/core/blob/master/samples/RaspberryPiInstructions.md\">Celui ci</a> pour le déploiement</p>"}},
    "staticQueryHashes": ["1026020893","28434099","3153813225"]}